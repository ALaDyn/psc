#include "config.h"

c CHECKPOINTING ROUTINE FOR DATA WRITEOUT

      subroutine SERV_read

      use VLA_variables
      use PIC_variables
      use fields

      implicit none

      integer i1a,i1e,i2a,i2e,i3a,i3e
      character*5 node


      call SERV_labelgen(mpe,node)


      open(10,file=trim(data_chk)//'/'//node//'CPNEW',
     &     access='sequential',form='unformatted')

      read(10) nstart
      read(10) shift_c,shift_z
      read(10) nprfo,nprco
      read(10) nprpartio
      read(10) tmnvfo,tmxvfo
      read(10) tmnvpo,tmxvpo
      read(10) tmnvco,tmxvco

      if (nprf.lt.nstart) nprf=nprfo 
      if (nprc.lt.nstart) nprc=nprco
      if (nprparti.lt.nstart) nprparti=nprpartio
      if (tmnvf.lt.tmnvfo) tmnvf=tmnvfo
      if (tmxvf.lt.tmxvfo) tmxvf=tmxvfo
      if (tmnvp.lt.tmnvpo) tmnvp=tmnvpo
      if (tmxvp.lt.tmxvpo) tmxvp=tmxvpo
      if (tmnvc.lt.tmnvco) tmnvc=tmnvco
      if (tmxvc.lt.tmxvco) tmxvc=tmxvco

      call OUT_poyn_serv_read

      read(10) niloc,nialloc,cori
      read(10) i1mn,i1mx,i2mn,i2mx,i3mn,i3mx 


      call ALLOC_particles(niloc)

      allocate(ex(i1mn-rd1:i1mx+rd1,i2mn-rd2:i2mx+rd2,
     &            i3mn-rd3:i3mx+rd3))
      allocate(ey(i1mn-rd1:i1mx+rd1,i2mn-rd2:i2mx+rd2,
     &            i3mn-rd3:i3mx+rd3))
      allocate(ez(i1mn-rd1:i1mx+rd1,i2mn-rd2:i2mx+rd2,
     &            i3mn-rd3:i3mx+rd3))
      allocate(hx(i1mn-rd1:i1mx+rd1,i2mn-rd2:i2mx+rd2,
     &            i3mn-rd3:i3mx+rd3))
      allocate(hy(i1mn-rd1:i1mx+rd1,i2mn-rd2:i2mx+rd2,
     &            i3mn-rd3:i3mx+rd3))
      allocate(hz(i1mn-rd1:i1mx+rd1,i2mn-rd2:i2mx+rd2,
     &            i3mn-rd3:i3mx+rd3))
      allocate(jxi(i1mn-rd1:i1mx+rd1,i2mn-rd2:i2mx+rd2,
     &             i3mn-rd3:i3mx+rd3))
      allocate(jyi(i1mn-rd1:i1mx+rd1,i2mn-rd2:i2mx+rd2,
     &             i3mn-rd3:i3mx+rd3))
      allocate(jzi(i1mn-rd1:i1mx+rd1,i2mn-rd2:i2mx+rd2,
     &             i3mn-rd3:i3mx+rd3))
      allocate(ne(i1mn-rd1:i1mx+rd1,i2mn-rd2:i2mx+rd2,
     &            i3mn-rd3:i3mx+rd3))
      allocate(ni(i1mn-rd1:i1mx+rd1,i2mn-rd2:i2mx+rd2,
     &            i3mn-rd3:i3mx+rd3))
      allocate(nn(i1mn-rd1:i1mx+rd1,i2mn-rd2:i2mx+rd2,
     &            i3mn-rd3:i3mx+rd3))

      allocate(cpu(1:5))
      allocate(cpu_ary(1:5,0:npe-1))


      p_niloc=0.0
      ex=0.0d0
      ey=0.0d0
      ez=0.0d0
      hx=0.0d0
      hy=0.0d0
      hz=0.0d0
      jxi=0.0d0
      jyi=0.0d0
      jzi=0.0d0
      ne=0.0d0
      ni=0.0d0
      nn=0.0d0

      do i1=0,11*niloc+10,100
         i1e=min(i1+99,11*niloc+10)
         read(10) (p_niloc(i1a),i1a=i1,i1e)
      enddo

      do i3=i3mn-rd3,i3mx+rd3,100
         i3e=min(i3+99,i3mx+rd3)
         do i2=i2mn-rd2,i2mx+rd2,100
            i2e=min(i2+99,i2mx+rd2)
            do i1=i1mn-rd1,i1mx+rd1,100
               i1e=min(i1+99,i1mx+rd1)
               read(10) (((ne(i1a,i2a,i3a),i1a=i1,i1e),
     &                     i2a=i2,i2e),i3a=i3,i3e)
               read(10) (((ni(i1a,i2a,i3a),i1a=i1,i1e),
     &                     i2a=i2,i2e),i3a=i3,i3e)
               read(10) (((nn(i1a,i2a,i3a),i1a=i1,i1e),
     &                     i2a=i2,i2e),i3a=i3,i3e)
               read(10) (((jxi(i1a,i2a,i3a),i1a=i1,i1e),
     &                     i2a=i2,i2e),i3a=i3,i3e)
               read(10) (((jyi(i1a,i2a,i3a),i1a=i1,i1e),
     &                     i2a=i2,i2e),i3a=i3,i3e)
               read(10) (((jzi(i1a,i2a,i3a),i1a=i1,i1e),
     &                     i2a=i2,i2e),i3a=i3,i3e)
               read(10) (((ex(i1a,i2a,i3a),i1a=i1,i1e),
     &                     i2a=i2,i2e),i3a=i3,i3e)
               read(10) (((ey(i1a,i2a,i3a),i1a=i1,i1e),
     &                     i2a=i2,i2e),i3a=i3,i3e)
               read(10) (((ez(i1a,i2a,i3a),i1a=i1,i1e),
     &                     i2a=i2,i2e),i3a=i3,i3e)
               read(10) (((hx(i1a,i2a,i3a),i1a=i1,i1e),
     &                     i2a=i2,i2e),i3a=i3,i3e)
               read(10) (((hy(i1a,i2a,i3a),i1a=i1,i1e),
     &                     i2a=i2,i2e),i3a=i3,i3e)
               read(10) (((hz(i1a,i2a,i3a),i1a=i1,i1e),
     &                     i2a=i2,i2e),i3a=i3,i3e)
            enddo
         enddo
      enddo

      call OUT_FIELDS_serv_read

      cpu=0.0d0
      cpu_ary=0.0d0

      close(10)

      end subroutine SERV_read
