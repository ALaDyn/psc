
GTEST_ROOT = $(HOME)/build/googletest/googletest

AM_CFLAGS = -I$(top_srcdir)/src/include -I$(top_srcdir)/src/libmrc/include
AM_CXXFLAGS = -I$(top_srcdir)/src/include -I$(top_srcdir)/src/libmrc/include -I$(GTEST_ROOT)/include
LDFLAGS += -Wl,-rpath /usr/local/cuda/lib

noinst_LTLIBRARIES = libpsctest.la

libpsctest_la_SOURCES = \
	testing.cxx \
	testing_psc_test.cxx

LDADD = libpsctest.la ../libpsc/libpsc.la ../libmrc/src/libmrc.la

noinst_PROGRAMS = \
	psc_test_mfields_single

#	psc_test_cyclo \
	psc_test_accel \
	psc_test_em_wave \
	test_psc_mparticles \
	test_part_yz \
	test_field \
	test_bnd \
	test_bnd_multi \
	test_exchange_particles_multi

#	test_part_xy \
	test_part_xz \
	test_part_z \
	test_exchange_particles \
	test_sort


psc_test_cyclo_SOURCES = psc_test_cyclo.cxx
psc_test_accel_SOURCES = psc_test_accel.cxx
psc_test_mfields_single_SOURCES = psc_test_mfields_single.cxx
psc_test_em_wave_SOURCES = psc_test_em_wave.cxx
test_psc_mparticles_SOURCES = test_psc_mparticles.cxx
test_part_yz_SOURCES = test_part_yz.cxx
test_field_SOURCES = test_field.cxx
test_bnd_SOURCES = test_bnd.cxx
test_bnd_multi_SOURCES = test_bnd_multi.cxx
test_exchange_particles_multi_SOURCES = test_exchange_particles_multi.cxx

# if USE_CUDA

# noinst_PROGRAMS += \
# 	test_cuda_mparticles \
# 	thrust1

# test_cuda_mparticles_SOURCES =
# test_cuda_mparticles_LDADD = test_cuda_mparticles.lo cuda_mparticles.lo
# nodist_EXTRA_test_cuda_mparticles_SOURCES = dummy.cxx

# thrust1_SOURCES =
# thrust1_LDADD = thrust1.lo
# nodist_EXTRA_thrust1_SOURCES = dummy.cxx

# endif

TESTS = \
	psc_test_mfields_single

#	psc_test_cyclo \
	psc_test_accel \
	psc_test_em_wave

# test_part_yz_fortran.sh \
# 	test_part_yz_generic_c.sh \
# 	test_part_yz_1st.sh \
# 	test_exchange_particles_multi_0.sh \
# 	test_exchange_particles_multi_1.sh

#	test_part_xy \
	test_part_xz \
	test_part_z \
	test_field \
	test_bnd \
	test_exchange_particles \
	test_sort.sh

check_PROGRAMS = 
check_PROGRAMS += vec3_unittest
TESTS += vec3_unittest
vec3_unittest_SOURCES = vec3_unittest.cxx
vec3_unittest_LDADD = $(GTEST_ROOT)/src/gtest-all.lo $(GTEST_ROOT)/src/gtest_main.lo

# if USE_CUDA
# TESTS += \
# 	test_psc_mparticles_c_cuda.sh \
# 	test_psc_mparticles_cuda_c.sh \
# 	test_part_yz_cuda.sh \
# 	test_part_yz_cuda_1st.sh \
# 	test_part_yz_cuda_1vb.sh
# endif

# if USE_SSE2
# TESTS += \
# 	test_part_yz_sse2.sh
# endif

CUDA_DEPS = cuda_mparticles.h
CUDACC_FLAGS = -g --ptxas-options=-v --use_fast_math -arch=sm_30

%.lo: %.cu $(CUDA_DEPS)
	@echo "Tricking libtool"
	echo "void lotrickdummy() {}" > dummy.c
	$(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ dummy.c
	rm ${@:.lo=.o}
	rm dummy.c
	$(CUDACC) $(CUDACC_FLAGS) -c $< -o ${@:.lo=.o} || rm -f $@

# HACK to have automake use the CXX linker 
nodist_EXTRA_psc_test_cyclo_SOURCES = dummy.cxx
nodist_EXTRA_psc_test_accel_SOURCES = dummy.cxx
nodist_EXTRA_test_psc_mparticles_SOURCES = dummy.cxx
nodist_EXTRA_test_part_yz_SOURCES = dummy.cxx
#nodist_EXTRA_test_part_xy_SOURCES = dummy.cxx
#nodist_EXTRA_test_part_xz_SOURCES = dummy.cxx
#nodist_EXTRA_test_part_z_SOURCES = dummy.cxx
#nodist_EXTRA_test_exchange_particles_SOURCES = dummy.cxx
nodist_EXTRA_test_exchange_particles_multi_SOURCES = dummy.cxx
#nodist_EXTRA_test_sort_SOURCES = dummy.cxx
